---

description: "Target file structure"
alwaysApply: true
-----------------

## 1. Папка → назначение

| Папка                | Назначение                                    |
| -------------------- | --------------------------------------------- |
| `src/`               | Исходный код приложения.                      |
| `src/bot/`           | Хендлеры Telegram‑бота и бизнес‑логика.       |
| `src/services/`      | Интеграции с внешними API (OpenAI и др.).     |
| `src/scheduler/`     | Шедулер для live‑локаций и фоновых заданий.   |
| `tests/`             | Unit‑тесты.                                   |
| `.github/workflows/` | CI/CD (линт, тесты, деплой на Railway).       |
| `railway/`           | Конфигурация Railway (Dockerfile / nixpacks). |
| `docs/`              | Спецификации, PRD, диаграммы.                 |
| `scripts/`           | Вспомогательные скрипты разработчика.         |

---

## 2. Главные файлы

| Файл                            | Зачем нужен                                     |
| ------------------------------- | ----------------------------------------------- |
| `src/main.py`                   | Точка входа приложения, инициализация бота.     |
| `src/bot/handlers.py`           | Обработка команд и сообщений с локацией.        |
| `src/services/openai_client.py` | Обёртка вокруг OpenAI SDK для генерации фактов. |
| `src/scheduler/live_tasks.py`   | Логика 10‑минутных фактов по live‑локейшену.    |
| `pyproject.toml`                | Зависимости, настройки Ruff/Black.              |
| `Dockerfile`                    | Сборка контейнера для Railway.                  |
| `Procfile`                      | Команда запуска в Railway.                      |
| `.env.example`                  | Шаблон переменных окружения.                    |

---

## 3. Генерируй новые файлы здесь

* `src/bot/`
* `src/services/`
* `src/scheduler/`
* `tests/`
